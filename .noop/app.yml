---
components:
  - name: APIService
    type: service
    image: node:18-alpine
    root: api-service/
    build:
      steps:
        - directory: /api-service
        - copy: package*.json
          destination: ./
        - run: npm ci
        - copy: server.js
        - copy: routes/
    runtime:
      command: npm start
      resources:
        - AppDB
      variables:
        NODE_ENV: production
        AWS_REGION:
          $env: region
        DYNAMO_TABLE:
          $resources: AppDB.tableName
        DYNAMO_ENDPOINT:
          $resources: AppDB.endpoint

  - name: DataStatic
    type: static
    image: python:3-alpine
    root: data-static/
    build:
      steps:
        - directory: /data-static
        - copy: index.py
        - copy: datasets/*.csv.gz
          destination: datasets/
        - run: python index.py
        - directory: dist/

  - name: SeedingTask
    type: task
    image: node:18-alpine
    root: seeding-task/
    build:
      steps:
        - directory: /seeding-task
        - copy: package*.json
          destination: ./
        - run: npm ci
        - copy: index.js
    runtime:
      command: npm start
      resources:
        - AppDB
      variables:
        NODE_ENV: production
        AWS_REGION:
          $env: region
        DYNAMO_TABLE:
          $resources: AppDB.tableName
        DYNAMO_ENDPOINT:
          $resources: AppDB.endpoint

  - name: WebsiteStatic
    type: static
    image: node:18-alpine
    root: website-static/
    hosting:
      spa: true
    build:
      steps:
        - directory: /website-static
        - copy: package*.json
          destination: ./
        - run: npm ci
        - copy: index.html
        - copy: vite.config.js
        - copy: public/
        - copy: src/
        - run: npm run build
        - directory: dist/

# lifecycles:
#   - event: BeforeTraffic
#     components: [SeedingTask]

routes:
  - pattern: '/api/**'
    target:
      component: APIService
  - pattern: '/data.json'
    # internal: true
    target:
      component: DataStatic
  - target:
      component: WebsiteStatic

resources:
  - name: AppDB
    type: dynamodb
    hashKeyName: name
    hashKeyType: S
    rangeKeyName: type
    rangeKeyType: S
